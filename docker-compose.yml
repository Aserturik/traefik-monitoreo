services:
  reverse-proxy:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/middlewares.yml:/etc/traefik/dynamic/middlewares.yml
      - ./traefik/routers.yml:/etc/traefik/dynamic/routers.yml

  whoami:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
      - "traefik.http.routers.whoami.middlewares=test-auth@file,req-headers@file"

  backend:
    build:
      context: ./backend
    container_name: node-backend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.services.backend-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.backend.service=backend-service"
      - "traefik.http.routers.backend.middlewares=test-auth@file,req-headers@file,error-pages@file"

  backend-replica-1:
    build:
      context: ./backend
    container_name: node-backend-replica-1
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.services.backend-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.backend.service=backend-service"
      - "traefik.http.routers.backend.middlewares=test-auth@file,req-headers@file,error-pages@file"

  backend-replica-2:
    build:
      context: ./backend
    container_name: node-backend-replica-2
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.services.backend-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.backend.service=backend-service"
      - "traefik.http.routers.backend.middlewares=test-auth@file,req-headers@file,error-pages@file"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  nginx:
    image: nginx:alpine
    container_name: nginx-server
    restart: unless-stopped
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.localhost`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

volumes:
  grafana-data: